{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Get all activities",
  "properties": {
    "parameters": {
      "description": "struct for passing parameters to the method [`get_activities`]",
      "properties": {
        "cursor": {
          "description": "For pagination, the marker (an opaque string value) representing the first item on the next page",
          "type": [
            "string",
            "null"
          ]
        },
        "deal_id": {
          "description": "If supplied, only activities linked to the specified deal are returned. If filter_id is provided, this is ignored.",
          "format": "int32",
          "type": [
            "integer",
            "null"
          ]
        },
        "done": {
          "description": "If supplied, only activities with specified 'done' flag value are returned",
          "type": [
            "boolean",
            "null"
          ]
        },
        "filter_id": {
          "description": "If supplied, only activities matching the specified filter are returned",
          "format": "int32",
          "type": [
            "integer",
            "null"
          ]
        },
        "ids": {
          "description": "Optional comma separated string array of up to 100 entity ids to fetch. If filter_id is provided, this is ignored. If any of the requested entities do not exist or are not visible, they are not included in the response.",
          "type": [
            "string",
            "null"
          ]
        },
        "include_fields": {
          "description": "Optional comma separated string array of additional fields to include",
          "type": [
            "string",
            "null"
          ]
        },
        "lead_id": {
          "description": "If supplied, only activities linked to the specified lead are returned. If filter_id is provided, this is ignored.",
          "type": [
            "string",
            "null"
          ]
        },
        "limit": {
          "description": "For pagination, the limit of entries to be returned. If not provided, 100 items will be returned. Please note that a maximum value of 500 is allowed.",
          "format": "int32",
          "type": [
            "integer",
            "null"
          ]
        },
        "org_id": {
          "description": "If supplied, only activities linked to the specified organization are returned. If filter_id is provided, this is ignored.",
          "format": "int32",
          "type": [
            "integer",
            "null"
          ]
        },
        "owner_id": {
          "description": "If supplied, only activities owned by the specified user are returned. If filter_id is provided, this is ignored.",
          "format": "int32",
          "type": [
            "integer",
            "null"
          ]
        },
        "person_id": {
          "description": "If supplied, only activities whose primary participant is the given person are returned. If filter_id is provided, this is ignored.",
          "format": "int32",
          "type": [
            "integer",
            "null"
          ]
        },
        "sort_by": {
          "description": "The field to sort by. Supported fields: `id`, `update_time`, `add_time`, `due_date`.",
          "type": [
            "string",
            "null"
          ]
        },
        "sort_direction": {
          "description": "The sorting direction. Supported values: `asc`, `desc`.",
          "type": [
            "string",
            "null"
          ]
        },
        "updated_since": {
          "description": "If set, only activities with an `update_time` later than or equal to this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.",
          "type": [
            "string",
            "null"
          ]
        },
        "updated_until": {
          "description": "If set, only activities with an `update_time` earlier than this time are returned. In RFC3339 format, e.g. 2025-01-01T10:20:00Z.",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "title": "GetActivitiesParams",
      "type": "object"
    },
    "secrets": {
      "properties": {
        "PIPEDRIVE_ACCESS_TOKEN": {
          "description": "OAuth2 bearer token",
          "type": "string"
        },
        "PIPEDRIVE_CLIENT_ID": {
          "description": "OAuth2 client ID",
          "type": "string"
        },
        "PIPEDRIVE_CLIENT_SECRET": {
          "description": "OAuth2 client secret",
          "type": "string"
        },
        "PIPEDRIVE_REFRESH_TOKEN": {
          "description": "OAuth2 refresh token (optional)",
          "type": "string"
        },
        "PIPEDRIVE_X-API-TOKEN": {
          "description": "API key (header)",
          "type": "string"
        }
      },
      "required": [
        "PIPEDRIVE_X-API-TOKEN",
        "PIPEDRIVE_CLIENT_ID",
        "PIPEDRIVE_CLIENT_SECRET",
        "PIPEDRIVE_ACCESS_TOKEN"
      ],
      "type": "object"
    }
  },
  "required": [
    "PIPEDRIVE_X-API-TOKEN",
    "PIPEDRIVE_CLIENT_ID",
    "PIPEDRIVE_CLIENT_SECRET",
    "PIPEDRIVE_ACCESS_TOKEN",
    "secrets"
  ],
  "title": "pipedrive_get_activities",
  "type": "object"
}